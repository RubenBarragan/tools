#!/usr/bin/env python3

import subprocess
import argparse
import os
from os import listdir
from os.path import isfile, join, isdir

parser = argparse.ArgumentParser(description='Open directories with rmate.')
parser.add_argument('dir')
parser.add_argument('-l', '--list', action='store_true', help='list the files without opening them.')
parser.add_argument('-e', '--exclude', nargs='+', help='list of directory names to exclude from opening.', default=[])
parser.add_argument('-v', '--verbose', action='store_true', help='display what it is doing')
args = parser.parse_args()

def openFile(file):
    if args.verbose:
        print("opening " + file)
    subprocess.run(['rmate', file])

def printBuildFileIfAny(path) :
    for file in listdir(path):
        if isfile(join(path, file)):
            if(file == 'BUILD'):
                if(args.list):
                    print(join(path, file))
                else:
                    openFile(join(path, file))
                

def searchFiles(path):
    if path not in args.exclude:
        printBuildFileIfAny(path)
        for file in listdir(path):
            if isfile(join(path, file)) and file != 'BUILD':
                if args.list:
                    print(join(path, file))
                else:
                    openFile(join(path, file))
            elif isdir(join(path, file)):
                # TODO: it looks ugly, i dont like concatenating "/".
                searchFiles(join(path, file + "/"))

def main():
    searchFiles(args.dir)

if __name__ == "__main__":
    main()